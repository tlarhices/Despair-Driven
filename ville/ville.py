#!/usr/bin/env python
# -*- coding: utf-8 -*-
#import direct.directbase.DirectStart
from pandac.PandaModules import *

from weakref import proxy

import random
  
class Ville:
  surface = None
  def __init__(self, tailleX, tailleY):
    self.surface = []
    for i in range(0, tailleY):
      self.surface.append([])
      for j in range(0, tailleX):
        self.surface[i].append(0)
    #for i in range(0, tailleY):
    #  for j in range(0, tailleX):
    #    if random.random()<0.02:
    #      self.ajouteRouteAlea()
        
  def affiche(self):
    for ligne in self.surface:
      for bloc in ligne:
        if bloc==0:
          print "?",
        elif bloc==-1:
          print " ",
        elif bloc==1:
          print "#",
        else:
          print bloc,
      print
      
  def pointAlea(self):
    return (int(random.random()*len(self.surface)), int(random.random()*len(self.surface[0])))
      
  def ajouteRouteAlea(self):
    depx, depy = self.pointAlea()
    arrx, arry = self.pointAlea()
    self.surface[depx][depy] = -1
    self.surface[arrx][arry] = -1
    posx, posy = depx, depy
    while posx!=arrx or posy!=arry:
      if random.random()>0.5:
        if posx>arrx:
          posx-=1
        elif posx<arrx:
          posx+=1
      else:
        if posy>arry:
          posy-=1
        elif posy<arry:
          posy+=1
      self.surface[posx][posy]=-1
      
  def ping(self):
    cx,cy = self.pointAlea()
    c = self.surface[cx][cy]
    voisins = []
    for i in [-1, 0, 1]:
      elem = []
      for j in [-1, 0, 1]:
        if cx+i>=0 and cy+i>=0:
          if cx+i<len(self.surface) and cy+j<len(self.surface[0]):
            elem.append(self.surface[cx+i][cy+j])
      voisins.append(elem)
    
    blocs = None
    if voisins == [[0, 0, 0], [0, 0, 0], [0, 0, 0]]:
      blocs = [
        [[0, 0, 0], [0, 1, 0], [0, 0, 0]],
        [[0, 0, 0], [0, -1, 0], [0, 0, 0]],
        [[1, 1, 1], [1, 1, 1], [1, 1, 1]],
        [[1, 1, 1], [0, 1, 0], [1, 1, 1]],
        [[1, 0, 1], [1, 1, 1], [1, 0, 1]],
        [[1, 1, 1], [1, 0, 1], [0, 0, 0]],
        [[0, 0, 0], [1, 0, 1], [1, 1, 1]],
        [[1, 1, 1], [1, 1, 1], [1, 1, 1]],
        [[1, 0, 0], [1, 0, 1], [1, 1, 1]],
        [[1, 1, 0], [1, 1, 0], [0, 1, 1]],
        [[-1, -1, -1], [0, 0, 0], [0, 0, 0]],
        [[0, 0, 0], [-1, -1, -1], [0, 0, 0]],
        [[0, 0, 0], [0, 0, 0], [-1, -1, -1]],
        [[-1, 0, 0], [-1, 0, 0], [-1, 0, 0]],
        [[0, -1, 0], [0, -1, 0], [0, -1, 0]],
        [[0, 0, -1], [0, 0, -1], [0, 0, -1]],
        [[-1, 0, 0], [0, -1, 0], [0, 0, -1]],
        [[0, 0, -1], [0, -1, 0], [0, 0, -1]],
        [[-1, 0, 0], [0, -1, 0], [-1, 0, 0]],
        [[0, 0, -1], [0, -1, 0], [0, 0, -1]],
        [[-1, 0, -1], [0, -1, 0], [0, 0, 0]],
        [[0, 0, 0], [0, -1, 0], [-1, 0, -1]]
      ]
    if voisins == [[1,0,1],[1,1,1],[1,0,1]]:
      blocs = [
        [[1,-1,1],[1,1,1],[1,-1,1]],
        [[1,0,1],[1,1,1],[1,-1,1]],
        [[1,-1,1],[1,1,1],[1,0,1]]
      ]
    if voisins == [[0,0,0],[0,0,0],[1,1,1]]:
      blocs = [
        [[0,0,0],[1,0,1],[1,1,1]],
        [[0,0,0],[1,1,1],[1,1,1]],
        [[1,1,1],[0,0,1],[1,1,1]],
        [[1,1,1],[0,1,0],[1,1,1]],
        [[0,0,0],[-1,-1,-1],[1,1,1]],
        [[0,-1,0],[-1,-1,-1],[1,1,1]],
        [[-1,0,0],[-1,-1,-1],[1,1,1]],
        [[1,-1,0],[1,-1,-1],[1,1,1]]
      ]
    if voisins == [[0,0,0],[0,0,0],[1,1,1]]:
      blocs = [
        [[0,0,0],[1,0,1],[1,1,1]],
        [[0,0,0],[1,1,1],[1,1,1]],
        [[1,1,1],[0,0,1],[1,1,1]],
        [[1,1,1],[0,1,0],[1,1,1]],
        [[0,0,0],[-1,-1,-1],[1,1,1]],
        [[0,-1,0],[-1,-1,-1],[1,1,1]],
        [[-1,0,0],[-1,-1,-1],[1,1,1]],
        [[1,-1,0],[1,-1,-1],[1,1,1]]
      ]
    if voisins == [[0,1,1],[0,1,1],[0,1,1]]:
      blocs = [
        [[-1,1,1],[-1,1,1],[-1,1,1]],
        [[-1,1,1],[-1,1,1],[0,1,1]],
        [[0,1,1],[-1,1,1],[-1,1,1]],
        [[0,1,1],[0,1,1],[1,1,1]],
        [[1,1,1],[0,1,1],[0,1,1]],
        [[0,1,1],[1,1,1],[0,1,1]]
      ]
    if voisins == [[0,0,0],[0,-1,-1],[0,0,0]]:
      blocs = [
        [[0,0,0],[-1,-1,-1],[0,0,0]],
        [[0,0,-1],[0,-1,-1],[0,0,0]],
        [[0,-1,0],[0,-1,-1],[0,0,0]],
        [[-1,0,0],[0,-1,-1],[0,0,0]],
        [[0,0,0],[0,-1,-1],[0,0,-1]],
        [[0,0,0],[0,-1,-1],[0,-1,0]],
        [[0,0,0],[0,-1,-1],[-1,0,0]]
      ]
    if voisins == [[0,0,0],[-1,0,0],[-1,0,-1]]:
      blocs = [
        [[0,0,0],[-1,0,0],[-1,-1,-1]],
        [[0,0,0],[-1,-1,-1],[-1,0,-1]],
        [[0,0,0],[-1,1,1],[-1,-1,-1]],
        [[1,1,1],[-1,-1,-1],[-1,0,-1]]
      ]
    if voisins == [[-1,0,-1],[0,-1,0],[0,0,0]]:
      blocs = [
        [[-1,0,-1],[0,-1,-1],[0,0,0]],
        [[-1,0,-1],[-1,-1,0],[0,0,0]],
        [[-1,-1,-1],[0,-1,0],[0,0,0]]
      ]
    if voisins == [[0,0,0],[0,0,0],[-1,1,1]]:
      blocs = [
        [[-1,-1,-1],[-1,1,-1],[-1,1,1]],
        [[1,1,1],[1,1,1],[-1,1,1]],
        [[-1,0,0],[-1,0,0],[-1,1,1]]
      ]
    if voisins == [[1,1,0],[1,1,0],[0,1,1]]:
      blocs = [
        [[1,1,0],[1,1,0],[-1,1,1]],
        [[1,1,-1],[1,1,-1],[0,1,1]],
        [[1,1,0],[1,1,0],[1,1,1]]
      ]
    if voisins == [[0,0,0],[0,-1,-1],[0,-1,0]]:
      blocs = [
        [[1,1,1],[0,-1,-1],[0,-1,0]],
        [[1,0,0],[1,-1,-1],[1,-1,0]],
        [[0,-1,0],[0,-1,-1],[0,-1,0]],
        [[0,-1,0],[-1,-1,-1],[0,-1,0]],
        [[0,0,0],[-1,-1,-1],[0,-1,0]]
      ]
    if voisins == [[0,0,0],[0,0,-1],[0,0,0]]:
      blocs = [
        [[0,0,-1],[0,0,-1],[0,0,-1]],
        [[0,0,0],[-1,-1,-1],[0,0,0]],
        [[0,-1,0],[0,-1,-1],[0,0,0]]
      ]
    if voisins == [[0,0,0],[-1,-1,-1],[0,0,0]]:
      blocs = [
        [[1,1,1],[-1,-1,-1],[0,0,0]],
        [[0,0,0],[-1,-1,-1],[0,-1,0]],
        [[0,-1,0],[-1,-1,-1],[1,1,1]]
      ]
    if voisins == [[0,0,-1],[0,0,-1],[0,0,-1]]:
      blocs = [
        [[1,1,-1],[1,1,-1],[1,1,-1]],
        [[0,0,-1],[0,0,-1],[-1,-1,-1]],
        [[0,0,-1],[-1,-1,-1],[-1,0,-1]]
      ]
    if voisins == [[0,0,0],[0,-1,0],[0,0,0]]:
      blocs = [
        [[1, 1, 1], [1, 1, 1], [1, 1, 1]],
        [[1, 1, 1], [0, 1, 0], [1, 1, 1]],
        [[1, 0, 1], [1, 1, 1], [1, 0, 1]],
        [[1, 1, 1], [1, 0, 1], [0, 0, 0]],
        [[0, 0, 0], [1, 0, 1], [1, 1, 1]],
        [[1, 1, 1], [1, 1, 1], [1, 1, 1]],
        [[1, 0, 0], [1, 0, 1], [1, 1, 1]],
        [[1, 1, 0], [1, 1, 0], [0, 1, 1]],
        [[-1, -1, -1], [0, 0, 0], [0, 0, 0]],
        [[0, 0, 0], [-1, -1, -1], [0, 0, 0]],
        [[0, 0, 0], [0, 0, 0], [-1, -1, -1]],
        [[-1, 0, 0], [-1, 0, 0], [-1, 0, 0]],
        [[0, -1, 0], [0, -1, 0], [0, -1, 0]],
        [[0, 0, -1], [0, 0, -1], [0, 0, -1]],
        [[-1, 0, 0], [0, -1, 0], [0, 0, -1]],
        [[0, 0, -1], [0, -1, 0], [0, 0, -1]],
        [[-1, 0, 0], [0, -1, 0], [-1, 0, 0]],
        [[0, 0, -1], [0, -1, 0], [0, 0, -1]],
        [[-1, 0, -1], [0, -1, 0], [0, 0, 0]],
        [[0, 0, 0], [0, -1, 0], [-1, 0, -1]]
      ]
    if voisins == [[0,0,0],[0,0,-1],[-1,-1,-1]]:
      blocs = [
        [[0,0,-1],[0,0,-1],[-1,-1,-1]],
        [[1,1,0],[1,1,-1],[-1,-1,-1]],
        [[1,1,-1],[1,1,-1],[-1,-1,-1]]
      ]
    if voisins == [[0,0,0],[1,0,1],[1,1,1]]:
      blocs = [
        [[0,-1,0],[1,-1,1],[1,-1,1]],
        [[-1,-1,-1],[1,0,1],[1,1,1]],
        [[1,-1,-1],[1,-1,1],[1,1,1]]
      ]
    if voisins == [[0,0,0],[0,0,1],[0,0,0]]:
      blocs = [
        [[1, 1, 1], [1, 1, 1], [1, 1, 1]],
        [[1, 1, 1], [0, 1, 0], [1, 1, 1]],
        [[1, 0, 1], [1, 1, 1], [1, 0, 1]],
        [[1, 1, 1], [1, 0, 1], [0, 0, 0]],
        [[0, 0, 0], [1, 0, 1], [1, 1, 1]],
        [[1, 1, 1], [1, 1, 1], [1, 1, 1]],
        [[1, 0, 0], [1, 0, 1], [1, 1, 1]],
        [[1, 1, 0], [1, 1, 0], [0, 1, 1]],
        [[-1, -1, -1], [0, 0, 0], [0, 0, 0]],
        [[0, 0, 0], [-1, -1, -1], [0, 0, 0]],
        [[0, 0, 0], [0, 0, 0], [-1, -1, -1]],
        [[-1, 0, 0], [-1, 0, 0], [-1, 0, 0]],
        [[0, -1, 0], [0, -1, 0], [0, -1, 0]],
        [[0, 0, -1], [0, 0, -1], [0, 0, -1]],
        [[-1, 0, 0], [0, -1, 0], [0, 0, -1]],
        [[0, 0, -1], [0, -1, 0], [0, 0, -1]],
        [[-1, 0, 0], [0, -1, 0], [-1, 0, 0]],
        [[0, 0, -1], [0, -1, 0], [0, 0, -1]],
        [[-1, 0, -1], [0, -1, 0], [0, 0, 0]],
        [[0, 0, 0], [0, -1, 0], [-1, 0, -1]]
      ]
      
    if blocs :
      bloc = random.choice(blocs)
      for i in [-1, 0, 1]:
        for j in [-1, 0, 1]:
          if cx+i<len(self.surface) and cy+j<len(self.surface[0]):
            self.surface[cx+i][cy+j] = bloc[i+1][j+1]
      

ville=Ville(25,20)
ville.affiche()
while True:
  print "-------"
  for i in range(0,10000 ):
    ville.ping()
  ville.affiche()
  raw_input()
#run()
